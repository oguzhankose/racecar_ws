<launch>

  <arg name="racecar_version" default="racecar-v2" />
  <arg name="imu_model" default="razor_imu_m0" doc="imu sensor types [razor_imu, razor_imu_m0]" />

  <arg name="run_voxel" default="true" />

  <arg name="run_camera" default="true" />
  <arg name="run_imu" default="true" />
  <arg name="run_vesc" default="true" />


  <!-- vehicle geometry parameters, footprint, and static transforms -->
  <include file="$(find racecar)/launch/includes/common/vehicle_geometry.launch.xml">
    <arg name="racecar_version" value="$(arg racecar_version)" />
  </include>

  <!-- joystick to ackermann command -->
  <include file="$(find racecar)/launch/includes/common/joy_teleop.launch.xml" >
    <arg name="racecar_version" value="$(arg racecar_version)" />
  </include>

  <!-- default (zero) ackermann command -->
  <node name="zero_ackermann_cmd" pkg="rostopic" type="rostopic" args="pub -r 4 ackermann_cmd_mux/input/default ackermann_msgs/AckermannDriveStamped '{header: auto, drive: {steering_angle: 0.0, speed: 0.0} }'" />

  <!-- priority-based command multiplexer -->
  <include file="$(find ackermann_cmd_mux)/launch/standalone.launch">
    <arg name="nodelet_manager_name" value="ackermann_cmd_mux_nodelet_manager" />
    <arg name="config_file" value="$(find racecar)/config/$(arg racecar_version)/mux.yaml" />
  </include>

  <!-- controllers -->
  <include file="$(find racecar)/launch/includes/common/controllers.launch.xml">  
    <arg name="racecar_version" value="$(arg racecar_version)" />
  </include>

  
  <!-- start electronic speed controller driver -->
  <group if="$(eval arg('run_vesc') == true)">
    <include file="$(find racecar)/launch/includes/$(arg racecar_version)/vesc.launch.xml" >
      <arg name="racecar_version" value="$(arg racecar_version)" />
    </include>
  </group>
  

  <!-- start imu, laser scanner and camera -->
  <include file="$(find racecar)/launch/includes/common/sensors.launch.xml" >
    <arg name="racecar_version" value="$(arg racecar_version)" />
    <arg name="imu_model" value="$(arg imu_model)" />    
    <arg name="run_imu" value="$(arg run_imu)" />  
    <arg name="run_camera" value="$(arg run_camera)" />  
  </include>


                    <!-- user defined part of the launch file -->


  <!--node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_map" 
        args="0.0 0.0 0.0     0.0 0.0 0.0 /base_link /map" /-->


  <!-- start laser scan to pcl conversion -->
  <node name="laser2pcl" pkg="racecar-nav" type="laser2pcl.py" />

  <!-- start pcl voxel filter -->
  <include file="$(find racecar-nav)/launch/pcl_voxel.launch" >
    <arg name="run_voxel" value="$(arg run_voxel)" />
  </include>

  <!-- start python pcl transformations -->
  <node name="tf_pcl" pkg="racecar-nav" type="tf_pcl.py" />

  <!-- start odom publisher -->
  	<node name="odom_pub" pkg="racecar-nav" type="odom_pub.py" />


                    <!-- user defined part of the launch file -->


</launch>
